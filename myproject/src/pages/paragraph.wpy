<style lang="scss" scoped>
.page {
  padding: 0 20rpx;
  position: relative;
  .list {
    padding: 20rpx 0;
    border-bottom: 1rpx solid #ccc;
    font-size: 30rpx;
    text {
      font-size: 30rpx;
    }
    image,
    video {
      width: 100%;
    }
    image {
      max-height: 400rpx;
    }
    .info {
      display: flex;
      font-size:30rpx;
      margin-top: 20rpx;
      .comment {
        margin-right: 10rpx;
      }
    }
    .video {
      position: relative;
      overflow: hidden;
      margin: 20rpx 0;
      min-height: 400rpx;
      image, video {
        position: absolute;
        width: 100%;
        height: 400rpx;
      }
      .mask {
        position: absolute;
        width: 100%;
        height: 100%;
        background-color: #000;
      }
      .play {
        position: absolute;
        left: 50%;
        top: 50%;
        display: block;
        transform: translate(-30%, -50%);
        opacity: .8;
        z-index: 2;
        .play-button {
          width: 0;
          height: 0;
          border-top: 50rpx solid transparent;
          border-left: 70rpx solid #fff;
          border-bottom: 50rpx solid transparent;
        }
        .videotime {
          color: #fff;
          transform: translateX(-20%); 
        }
      }
    }
  }
  .more {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    padding: 10rpx 0;
    image {
      width: 50rpx;
      height: 50rpx;
    }
  }
  // 背景文字
  .bg-text {
    position: absolute;
    left: 7%;
    top: 0;
    width: 100%;
    height: 300rpx;
    font-size: 25px;
    color: rgb(110, 106, 106);
    font-weight: 900;
    opacity: .3;
    text-align: center;
    transform: rotate(-10deg) translateY(-50%);
    margin-top: 70%;
    z-index: -1;
    .light {
      position: absolute;
      width: 10px;
      height: 100px;
      background: #fff;
      opacity: .5;
      top: 0;
      left: 0;
      animation: move .5s infinite;
    }
    @keyframes move {
      0% {
        left: 0;
      }
      100% {
        left: 100%;
      }
    }
  }
  // 刷新按钮样式
  .refresh {
    position: fixed;
    right: 30rpx;
    bottom: 50rpx;
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
    background: #fff;
    z-index: 3;
    overflow: hidden;
    box-shadow: 1px 1px 2px 2px #ccc;
    image {
      width: 100%;
      height: 100%;
    }
  }
  .rotate {
    animation: rotate 1s infinite; 
  }
  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
</style>

<template>
<view class="page">
  <repeat for="{{list}}" key="index" index="index" item="item">
    <view class="list" wx:if="{{item.height < 1000}}">
      <text>{{item.text}}</text>
      <!-- 当类型是图片的时候 -->
      <image wx:if="{{item.type === '10'}}" src="{{item.cdn_img}}" @tap="previewImage" data-list="{{item.cdn_img}}"  mode="aspectFit" lazy-load="true" @error="err({{index}})"></image>
      <!-- 当类型是视频的时候，一开始显示视频的图片，当点击播放按钮的时候才显示video -->
      <view class="video" wx:if="{{item.type === '41'}}">
        <view class="mask" wx:if="{{index !== videoIndex}}"></view>
        <view class="play" wx:if="{{index !== videoIndex}}">
          <view class="play-button" @tap="playVideo({{index}})"></view>
          <view class="videotime">{{item.videotime}}</view>
        </view>
        <image wx:if="{{index !== videoIndex}}" src="{{item.cdn_img}}" mode="aspectFit" lazy-load="true" @error="err({{index}})"></image>
        <video wx:if="{{index === videoIndex}}" src="{{item.videouri}}" id="video-{{index}}" autoplay="true" show-center-play-btn="false" @error="err({{index}})"></video>
      </view>
      <!-- 底部评论数和发布时间 -->
      <view class="info"><view class="comment">{{item.comment}}评论</view><view class="passtime">{{item.passtime}}</view></view>
    </view>
  </repeat>
  <view class="more" wx:if="{{ismore}}"><image src="../images/loader.gif"></image>正在加载更多...</view>
  <!-- 背景文字 -->
  <view class="bg-text" wx:if="{{isloading}}"><view>笑一笑</view><view>生活更精彩</view><view class="light"></view></view>
  <!-- 刷新按钮 -->
  <view @tap="refresh" class="{{isrefresh === true ? 'rotate': ''}} refresh">
    <image src="../images/refresh.png" mode="aspectFit"></image>
  </view>
</view>
</template>

<script>
  import wepy from 'wepy'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '笑一笑',
      enablePullDownRefresh: true
    }
    components = {}
    data = {
      list: [],
      page: 1,
      videoIndex: -1,
      ismore: false,
      isloading: true
    }
    // 上拉加载更多
    onReachBottom() {
      this.page += 1
      this.url()
    }
    // 下拉刷新操作
    async onPullDownRefresh() {
      await this.url(true).then(() => {
        wepy.pageScrollTo({
          scrollTop: 0,
          duration: 0
        })
        wepy.stopPullDownRefresh() // 关闭下拉刷新
      })
    }
    methods = {
      // 刷新操作
      async refresh() {
        wepy.showLoading({
          title: '加载中'
        })
        this.videoIndex = -1
        this.page = 0
        await this.url(true).then(res => {
          wepy.hideLoading()
          wepy.pageScrollTo({
            scrollTop: 0,
            duration: 0
          })
        })
      },
      // 当图片和视频的链接为404的时候，将此项删除
      err(index) {
        this.list.splice(index, 1)
      },
      // 当点击播放按钮，将图片变成视频,将其他视频隐藏（这样做的目的是让本页面始终只有一个视频处于播放状态）
      async playVideo(index) {
        // 如果当前是wifi环境则允许直接播放视频
        if (wepy.$instance.globalData.networkType === 1) {
          this.playVideoFun(index)
        } else {
          const res = await wepy.showModal({
            title: '提示',
            content: '非wifi环境，是否继续播放视频',
            confirmColor: '#ed4040'
          })
          // 用户点击确定或者取消
          if (res.confirm) {
            wepy.$instance.globalData.networkType = 1
            this.playVideoFun(index)
          } else if (res.cancel) {
            console.log('用户点击取消')
          }
        }
      },
      // 预览图片
      previewImage(e) {
        let list = e.currentTarget.dataset.list
        let urls = []
        urls.push(list)
        wepy.previewImage({
          urls
        })
      }
    }
    // 请求api
    async url(isrefreash) {
      this.isrefresh = true // 加载数据的时候，让刷新按钮旋转
      let self = this
      let res = await wepy.request({
        url: 'https://www.apiopen.top/satinApi',
        data: {
          type: 1,
          page: self.page
        },
        header: {
          'content-type': 'application/json' // 默认值
        }
      })
      // 计算视频的时间,将秒转换成分钟
      res.data.data.map(item => {
        let min = Math.floor(item.videotime / 60)
        const minVal = min >= 10 ? min : `0${min}`
        let second = item.videotime % 60
        const secondVal = second >= 10 ? second : `0${second}`
        item.videotime = `${minVal}:${secondVal}`
        return item
      })
      if (isrefreash) { // 如果是刷新
        this.list = res.data.data
      } else {
        this.list = this.list.concat(res.data.data)
      }
      this.ismore = true
      this.isrefresh = false
      this.isloading = false
      this.$apply()
    }
    // 播放视频函数
    playVideoFun(index) {
      // 当第一次点击视频的时候，将index绑定到videoIndex上面
      // 然后通过wepy.createVideoContext(`video-${index}`)获取当前点击的视频，然后进行播放
      if (this.videoIndex === -1) {
        this.videoIndex = index
        // 如果视频未设置自动播放，就执行以下注释代码
        // let videoContext = wepy.createVideoContext(`video-${index}`)
        // videoContext.play()
      } else { // 否则，则表示不是第一次点击，则关闭上一次点击的视频，并将当前点击的视频打开
        let self = this
        let videoContextPrev = wepy.createVideoContext(`video-${self.videoIndex}`)
        videoContextPrev.pause()
        this.videoIndex = index
        // let videoContext = wepy.createVideoContext(`video-${index}`)
        // videoContext.play()
      }
      this.$apply()
    }
    onLoad() {
      this.url()
    }
    onHide() {
      let self = this
      let videoContextPrev = wepy.createVideoContext(`video-${self.videoIndex}`)
      videoContextPrev.pause()
    }
  }
</script>
